{"version":3,"file":"js/358.13b09e18.js","mappings":"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","sources":["webpack://tasker/./node_modules/vue-loader/dist/exportHelper.js","webpack://tasker/./src/coloris.js","webpack://tasker/./src/stores/BigMenuStore.js","webpack://tasker/./src/stores/ListViewStore.js","webpack://tasker/./src/stores/imageDBStore.js","webpack://tasker/./src/components/UI/ApplicationName.vue","webpack://tasker/./src/components/UI/ApplicationName.vue?997d","webpack://tasker/./src/components/UI/InfoList.vue","webpack://tasker/./src/components/UI/InfoList.vue?a6b3","webpack://tasker/./src/components/UI/Loader.vue","webpack://tasker/./src/components/UI/Loader.vue?fb91","webpack://tasker/./src/components/UI/SectionHeader.vue","webpack://tasker/./src/components/UI/SortList.vue","webpack://tasker/./src/components/UI/SortList.vue?f984","webpack://tasker/./src/components/groups/TheSortLists.vue","webpack://tasker/./src/components/groups/TheSortLists.vue?7ef3","webpack://tasker/./src/components/UI/PersonalList.vue","webpack://tasker/./src/components/UI/PersonalList.vue?7ee1","webpack://tasker/./src/components/groups/ThePersonalLists.vue","webpack://tasker/./src/components/groups/ThePersonalLists.vue?3a00","webpack://tasker/./src/components/UI/PersonalTag.vue","webpack://tasker/./src/components/UI/PersonalTag.vue?4a49","webpack://tasker/./src/components/groups/ThePersonalTags.vue","webpack://tasker/./src/components/groups/ThePersonalTags.vue?6ba7","webpack://tasker/./src/components/UI/TopButton.vue","webpack://tasker/./src/components/UI/TopButton.vue?d0ec","webpack://tasker/./src/components/UI/InputText.vue","webpack://tasker/./src/components/UI/InputText.vue?649c","webpack://tasker/./src/components/UI/Coloris.vue","webpack://tasker/./src/components/UI/Coloris.vue?d3cf","webpack://tasker/./src/components/groups/CreateNewListPopup.vue","webpack://tasker/./src/components/groups/CreateNewListPopup.vue?6cb8","webpack://tasker/./src/components/groups/TheBigMenu.vue","webpack://tasker/./src/components/groups/TheBigMenu.vue?7f1b","webpack://tasker/./src/components/UI/SearchInputText.vue","webpack://tasker/./src/components/UI/SearchInputText.vue?57a2","webpack://tasker/./src/components/groups/TheTopBar.vue","webpack://tasker/./src/components/groups/TheTopBar.vue?af86","webpack://tasker/./src/components/groups/TheTasker.vue","webpack://tasker/./src/components/groups/TheTasker.vue?0c7b","webpack://tasker/./src/views/WorkspaceView.vue","webpack://tasker/./src/views/WorkspaceView.vue?a4d3"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","/*!\n * Copyright (c) 2021 Momo Bassit.\n * Licensed under the MIT License (MIT)\n * https://github.com/mdbassit/Coloris\n */\n\n((window, document, Math, undefined) => {\n  const ctx = document.createElement('canvas').getContext('2d');\n  const currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n  let container, picker, colorArea, colorAreaDims, colorMarker, colorPreview, colorValue, clearButton, closeButton,\n      hueSlider, hueMarker, alphaSlider, alphaMarker, currentEl, currentFormat, oldColor, keyboardNav;\n\n  // Default settings\n  const settings = {\n    el: '[data-coloris]',\n    parent: 'body',\n    theme: 'default',\n    themeMode: 'light',\n    rtl: false,\n    wrap: true,\n    margin: 2,\n    format: 'hex',\n    formatToggle : false,\n    swatches: [],\n    swatchesOnly: false,\n    alpha: true,\n    forceAlpha: false,\n    focusInput: true,\n    selectInput: false,\n    inline: false,\n    defaultColor: '#000000',\n    clearButton: false,\n    clearLabel: 'Clear',\n    closeButton: false,\n    closeLabel: 'Close',\n    onChange: () => undefined,\n    a11y: {\n      open: 'Open color picker',\n      close: 'Close color picker',\n      clear: 'Clear the selected color',\n      marker: 'Saturation: {s}. Brightness: {v}.',\n      hueSlider: 'Hue slider',\n      alphaSlider: 'Opacity slider',\n      input: 'Color value field',\n      format: 'Color format',\n      swatch: 'Color swatch',\n      instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n    }\n  };\n\n  // Virtual instances cache\n  const instances = {};\n  let currentInstanceId = '';\n  let defaultInstance = {};\n  let hasInstance = false;\n\n  /**\n   * Configure the color picker.\n   * @param {object} options Configuration options.\n   */\n  function configure(options) {\n    if (typeof options !== 'object') {\n      return;\n    }\n\n    for (const key in options) {\n      switch (key) {\n        case 'el':\n          bindFields(options.el);\n          if (options.wrap !== false) {\n            wrapFields(options.el);\n          }\n          break;\n        case 'parent':\n          container = document.querySelector(options.parent);\n          if (container) {\n            container.appendChild(picker);\n            settings.parent = options.parent;\n\n            // document.body is special\n            if (container === document.body) {\n              container = undefined;\n            }\n          }\n          break;\n        case 'themeMode':\n          settings.themeMode = options.themeMode;\n          if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            settings.themeMode = 'dark';\n          }\n          // The lack of a break statement is intentional\n        case 'theme':\n          if (options.theme) {\n            settings.theme = options.theme;\n          }\n\n          // Set the theme and color scheme\n          picker.className = `clr-picker clr-${settings.theme} clr-${settings.themeMode}`;\n\n          // Update the color picker's position if inline mode is in use\n          if (settings.inline) {\n            updatePickerPosition();\n          }\n          break;\n        case 'rtl':\n          settings.rtl = !!options.rtl;\n          document.querySelectorAll('.clr-field').forEach(field => field.classList.toggle('clr-rtl', settings.rtl));\n          break;\n        case 'margin':\n          options.margin *= 1;\n          settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n          break;\n        case 'wrap':\n          if (options.el && options.wrap) {\n            wrapFields(options.el);\n          }\n          break;\n        case 'formatToggle':\n          settings.formatToggle = !!options.formatToggle;\n          getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n          if (settings.formatToggle) {\n            settings.format = 'auto';\n          }\n          break;\n        case 'swatches':\n          if (Array.isArray(options.swatches)) {\n            const swatches = [];\n\n            options.swatches.forEach((swatch, i) => {\n              swatches.push(`<button type=\"button\" id=\"clr-swatch-${i}\" aria-labelledby=\"clr-swatch-label clr-swatch-${i}\" style=\"color: ${swatch};\">${swatch}</button>`);\n            });\n\n            getEl('clr-swatches').innerHTML = swatches.length ? `<div>${swatches.join('')}</div>` : '';\n            settings.swatches = options.swatches.slice();\n          }\n          break;\n        case 'swatchesOnly':\n          settings.swatchesOnly = !!options.swatchesOnly;\n          picker.setAttribute('data-minimal', settings.swatchesOnly);\n          break;\n        case 'alpha':\n          settings.alpha = !!options.alpha;\n          picker.setAttribute('data-alpha', settings.alpha);\n          break;\n        case 'inline':\n          settings.inline = !!options.inline;\n          picker.setAttribute('data-inline', settings.inline);\n\n          if (settings.inline) {\n            const defaultColor = options.defaultColor || settings.defaultColor;\n            \n            currentFormat = getColorFormatFromStr(defaultColor);\n            updatePickerPosition();\n            setColorFromStr(defaultColor);\n          }\n          break;\n        case 'clearButton':\n          // Backward compatibility\n          if (typeof options.clearButton === 'object') {\n            if (options.clearButton.label) {\n              settings.clearLabel = options.clearButton.label;\n              clearButton.innerHTML = settings.clearLabel;\n            }\n\n            options.clearButton = options.clearButton.show;\n          }\n\n          settings.clearButton = !!options.clearButton;\n          clearButton.style.display = settings.clearButton ? 'block' : 'none';\n          break;\n        case 'clearLabel':\n          settings.clearLabel = options.clearLabel;\n          clearButton.innerHTML = settings.clearLabel;\n          break;\n        case 'closeButton':\n          settings.closeButton = !!options.closeButton;\n\n          if (settings.closeButton) {\n            picker.insertBefore(closeButton, colorPreview);\n          } else {\n            colorPreview.appendChild(closeButton);\n          }\n\n          break;\n        case 'closeLabel':\n          settings.closeLabel = options.closeLabel;\n          closeButton.innerHTML = settings.closeLabel;\n          break;\n        case 'a11y':\n          const labels = options.a11y;\n          let update = false;\n\n          if (typeof labels === 'object') {\n            for (const label in labels) {\n              if (labels[label] && settings.a11y[label]) {\n                settings.a11y[label] = labels[label];\n                update = true;\n              }\n            }\n          }\n\n          if (update) {\n            const openLabel = getEl('clr-open-label');\n            const swatchLabel = getEl('clr-swatch-label');\n\n            openLabel.innerHTML = settings.a11y.open;\n            swatchLabel.innerHTML = settings.a11y.swatch;\n            closeButton.setAttribute('aria-label', settings.a11y.close);\n            clearButton.setAttribute('aria-label', settings.a11y.clear);\n            hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n            alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n            colorValue.setAttribute('aria-label', settings.a11y.input);\n            colorArea.setAttribute('aria-label', settings.a11y.instruction);\n          }\n          break;\n        default:\n          settings[key] = options[key];\n      }\n    }\n  }\n\n  /**\n   * Add or update a virtual instance.\n   * @param {String} selector The CSS selector of the elements to which the instance is attached.\n   * @param {Object} options Per-instance options to apply.\n   */\n  function setVirtualInstance(selector, options) {\n    if (typeof selector === 'string' && typeof options === 'object') {\n      instances[selector] = options;\n      hasInstance = true;\n    }\n  }\n\n  /**\n   * Remove a virtual instance.\n   * @param {String} selector The CSS selector of the elements to which the instance is attached.\n   */\n  function removeVirtualInstance(selector) {\n    delete instances[selector];\n\n    if (Object.keys(instances).length === 0) {\n      hasInstance = false;\n\n      if (selector === currentInstanceId) {\n        resetVirtualInstance();\n      }\n    }\n  }\n\n  /**\n   * Attach a virtual instance to an element if it matches a selector.\n   * @param {Object} element Target element that will receive a virtual instance if applicable.\n   */\n  function attachVirtualInstance(element) {\n    if (hasInstance) {\n      // These options can only be set globally, not per instance\n      const unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];\n\n      for (let selector in instances) {\n        const options = instances[selector];\n\n        // If the element matches an instance's CSS selector\n        if (element.matches(selector)) {\n          currentInstanceId = selector;\n          defaultInstance = {};\n\n          // Delete unsupported options\n          unsupportedOptions.forEach(option => delete options[option]);\n\n          // Back up the default options so we can restore them later\n          for (let option in options) {\n            defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n          }\n\n          // Set the instance's options\n          configure(options);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Revert any per-instance options that were previously applied.\n   */\n  function resetVirtualInstance() {\n    if (Object.keys(defaultInstance).length > 0) {\n      configure(defaultInstance);\n      currentInstanceId = '';\n      defaultInstance = {};\n    }\n  }\n\n  /**\n   * Bind the color picker to input fields that match the selector.\n   * @param {string} selector One or more selectors pointing to input fields.\n   */\n  function bindFields(selector) {\n    // Show the color picker on click on the input fields that match the selector\n    addListener(document, 'click', selector, event => {\n      // Skip if inline mode is in use\n      if (settings.inline) {\n        return;\n      }\n\n      // Apply any per-instance options first\n      attachVirtualInstance(event.target);\n\n      currentEl = event.target;\n      oldColor = currentEl.value;\n      currentFormat = getColorFormatFromStr(oldColor);\n      picker.classList.add('clr-open');\n      \n      updatePickerPosition();\n      setColorFromStr(oldColor);\n\n      if (settings.focusInput || settings.selectInput) {\n        colorValue.focus({ preventScroll: true });\n        colorValue.setSelectionRange(currentEl.selectionStart, currentEl.selectionEnd);\n      }\n      \n      if (settings.selectInput) {\n        colorValue.select();\n      }\n\n      // Always focus the first element when using keyboard navigation\n      if (keyboardNav || settings.swatchesOnly) {\n        getFocusableElements().shift().focus();\n      }\n\n      // Trigger an \"open\" event\n      currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n    });\n\n    // Update the color preview of the input fields that match the selector\n    addListener(document, 'input', selector, event => {\n      const parent = event.target.parentNode;\n\n      // Only update the preview if the field has been previously wrapped\n      if (parent.classList.contains('clr-field')) {\n        parent.style.color = event.target.value;\n      }\n    });\n  }\n\n  /**\n   * Update the color picker's position and the color gradient's offset\n   */\n  function updatePickerPosition() {\n    const parent = container;\n    const scrollY = window.scrollY;\n    const pickerWidth = picker.offsetWidth;\n    const pickerHeight = picker.offsetHeight;\n    const reposition = { left: false, top: false };\n    let parentStyle, parentMarginTop, parentBorderTop;\n    let offset = { x: 0, y: 0 };\n\n    if (parent) {\n      parentStyle = window.getComputedStyle(parent);\n      parentMarginTop = parseFloat(parentStyle.marginTop);\n      parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n      offset = parent.getBoundingClientRect();\n      offset.y += parentBorderTop + scrollY;\n    }\n\n    if (!settings.inline) {\n      const coords = currentEl.getBoundingClientRect();\n      let left = coords.x;\n      let top = scrollY + coords.y + coords.height + settings.margin;\n\n      // If the color picker is inside a custom container\n      // set the position relative to it\n      if (parent) {\n        left -= offset.x;\n        top -= offset.y;\n\n        if (left + pickerWidth > parent.clientWidth) {\n          left += coords.width - pickerWidth;\n          reposition.left = true;\n        }\n\n        if (top + pickerHeight >  parent.clientHeight - parentMarginTop) {\n          if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n            top -= coords.height + pickerHeight + settings.margin * 2;\n            reposition.top = true;\n          }\n        }\n\n        top += parent.scrollTop;\n\n      // Otherwise set the position relative to the whole document\n      } else {\n        if (left + pickerWidth > document.documentElement.clientWidth) {\n          left += coords.width - pickerWidth;\n          reposition.left = true;\n        }\n\n        if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n          if (pickerHeight + settings.margin <= coords.top) {\n            top = scrollY + coords.y - pickerHeight - settings.margin;\n            reposition.top = true;\n          }\n        }\n      }\n\n      picker.classList.toggle('clr-left', reposition.left);\n      picker.classList.toggle('clr-top', reposition.top);\n      picker.style.left = `${left}px`;\n      picker.style.top = `${top}px`;\n      offset.x += picker.offsetLeft;\n      offset.y += picker.offsetTop;\n    }\n    \n    colorAreaDims = {\n      width: colorArea.offsetWidth,\n      height: colorArea.offsetHeight,\n      x: colorArea.offsetLeft + offset.x,\n      y: colorArea.offsetTop + offset.y\n    };\n  }\n\n  /**\n   * Wrap the linked input fields in a div that adds a color preview.\n   * @param {string} selector One or more selectors pointing to input fields.\n   */\n  function wrapFields(selector) {\n    document.querySelectorAll(selector).forEach(field => {\n      const parentNode = field.parentNode;\n\n      if (!parentNode.classList.contains('clr-field')) {\n        const wrapper = document.createElement('div');\n        let classes = 'clr-field';\n\n        if (settings.rtl || field.classList.contains('clr-rtl')) {\n          classes += ' clr-rtl';\n        }\n\n        wrapper.innerHTML = `<button type=\"button\" aria-labelledby=\"clr-open-label\"></button>`;\n        parentNode.insertBefore(wrapper, field);\n        wrapper.setAttribute('class', classes);\n        wrapper.style.color = field.value;\n        wrapper.appendChild(field);\n      }\n    });\n  }\n\n  /**\n   * Close the color picker.\n   * @param {boolean} [revert] If true, revert the color to the original value.\n   */\n  function closePicker(revert) {\n    if (currentEl && !settings.inline) {\n      const prevEl = currentEl;\n\n      // Revert the color to the original value if needed\n      if (revert) {\n        // This will prevent the \"change\" event on the colorValue input to execute its handler\n        currentEl = undefined;\n\n        if (oldColor !== prevEl.value) {\n          prevEl.value = oldColor;\n\n          // Trigger an \"input\" event to force update the thumbnail next to the input field\n          prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n        }\n      }\n\n      // Trigger a \"change\" event if needed\n      setTimeout(() => { // Add this to the end of the event loop\n        if (oldColor !== prevEl.value) {\n          prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n      });\n\n      // Hide the picker dialog\n      picker.classList.remove('clr-open');\n\n      // Reset any previously set per-instance options\n      if (hasInstance) {\n        resetVirtualInstance();\n      }\n\n      // Trigger a \"close\" event\n      prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n      if (settings.focusInput) {\n        prevEl.focus({ preventScroll: true });\n      }\n\n      // This essentially marks the picker as closed\n      currentEl = undefined;\n    }\n  }\n\n  /**\n   * Set the active color from a string.\n   * @param {string} str String representing a color.\n   */\n  function setColorFromStr(str) {\n    const rgba = strToRGBA(str);\n    const hsva = RGBAtoHSVA(rgba);\n\n    updateMarkerA11yLabel(hsva.s, hsva.v);\n    updateColor(rgba, hsva);\n\n    // Update the UI\n    hueSlider.value = hsva.h;\n    picker.style.color = `hsl(${hsva.h}, 100%, 50%)`;\n    hueMarker.style.left = `${hsva.h / 360 * 100}%`;\n\n    colorMarker.style.left = `${colorAreaDims.width * hsva.s / 100}px`;\n    colorMarker.style.top = `${colorAreaDims.height - (colorAreaDims.height * hsva.v / 100)}px`;\n\n    alphaSlider.value = hsva.a * 100;\n    alphaMarker.style.left = `${hsva.a * 100}%`;\n  }\n\n  /**\n   * Guess the color format from a string.\n   * @param {string} str String representing a color.\n   * @return {string} The color format.\n   */\n  function getColorFormatFromStr(str) {\n    const format = str.substring(0, 3).toLowerCase();\n\n    if (format === 'rgb' || format === 'hsl' ) {\n      return format;\n    }\n\n    return 'hex';\n  }\n\n  /**\n   * Copy the active color to the linked input field.\n   * @param {number} [color] Color value to override the active color.\n   */\n  function pickColor(color) {\n    color = color !== undefined ? color : colorValue.value;\n\n    if (currentEl) {\n      currentEl.value = color;\n      currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n    }\n\n    if (settings.onChange) {\n      settings.onChange.call(window, color, currentEl);\n    }\n\n    document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color, currentEl } }));\n  }\n\n  /**\n   * Set the active color based on a specific point in the color gradient.\n   * @param {number} x Left position.\n   * @param {number} y Top position.\n   */\n  function setColorAtPosition(x, y) {\n    const hsva = {\n      h: hueSlider.value * 1,\n      s: x / colorAreaDims.width * 100,\n      v: 100 - (y / colorAreaDims.height * 100),\n      a: alphaSlider.value / 100\n    };\n    const rgba = HSVAtoRGBA(hsva);\n\n    updateMarkerA11yLabel(hsva.s, hsva.v);\n    updateColor(rgba, hsva);\n    pickColor();\n  }\n\n  /**\n   * Update the color marker's accessibility label.\n   * @param {number} saturation\n   * @param {number} value\n   */\n  function updateMarkerA11yLabel(saturation, value) {\n    let label = settings.a11y.marker;\n\n    saturation = saturation.toFixed(1) * 1;\n    value = value.toFixed(1) * 1;\n    label = label.replace('{s}', saturation);\n    label = label.replace('{v}', value);\n    colorMarker.setAttribute('aria-label', label);\n  }\n\n  //\n  /**\n   * Get the pageX and pageY positions of the pointer.\n   * @param {object} event The MouseEvent or TouchEvent object.\n   * @return {object} The pageX and pageY positions.\n   */\n  function getPointerPosition(event) {\n    return {\n      pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n      pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n    };\n  }\n\n  /**\n   * Move the color marker when dragged.\n   * @param {object} event The MouseEvent object.\n   */\n  function moveMarker(event) {\n    const pointer = getPointerPosition(event);\n    let x = pointer.pageX - colorAreaDims.x;\n    let y = pointer.pageY - colorAreaDims.y;\n\n    if (container) {\n      y += container.scrollTop;\n    }\n\n    setMarkerPosition(x, y);\n\n    // Prevent scrolling while dragging the marker\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Move the color marker when the arrow keys are pressed.\n   * @param {number} offsetX The horizontal amount to move.\n   * @param {number} offsetY The vertical amount to move.\n   */\n  function moveMarkerOnKeydown(offsetX, offsetY) {\n    let x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n    let y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n    setMarkerPosition(x, y);\n  }\n\n  /**\n   * Set the color marker's position.\n   * @param {number} x Left position.\n   * @param {number} y Top position.\n   */\n  function setMarkerPosition(x, y) {\n    // Make sure the marker doesn't go out of bounds\n    x = (x < 0) ? 0 : (x > colorAreaDims.width) ? colorAreaDims.width : x;\n    y = (y < 0) ? 0 : (y > colorAreaDims.height) ? colorAreaDims.height : y;\n\n    // Set the position\n    colorMarker.style.left = `${x}px`;\n    colorMarker.style.top = `${y}px`;\n\n    // Update the color\n    setColorAtPosition(x, y);\n\n    // Make sure the marker is focused\n    colorMarker.focus();\n  }\n\n  /**\n   * Update the color picker's input field and preview thumb.\n   * @param {Object} rgba Red, green, blue and alpha values.\n   * @param {Object} [hsva] Hue, saturation, value and alpha values.\n   */\n  function updateColor(rgba = {}, hsva = {}) {\n    let format = settings.format;\n\n    for (const key in rgba) {\n      currentColor[key] = rgba[key];\n    }\n\n    for (const key in hsva) {\n      currentColor[key] = hsva[key];\n    }\n\n    const hex = RGBAToHex(currentColor);\n    const opaqueHex = hex.substring(0, 7);\n\n    colorMarker.style.color = opaqueHex;\n    alphaMarker.parentNode.style.color = opaqueHex;\n    alphaMarker.style.color = hex;\n    colorPreview.style.color = hex;\n\n    // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n    colorArea.style.display = 'none';\n    colorArea.offsetHeight;\n    colorArea.style.display = '';\n    alphaMarker.nextElementSibling.style.display = 'none';\n    alphaMarker.nextElementSibling.offsetHeight;\n    alphaMarker.nextElementSibling.style.display = '';\n\n    if (format === 'mixed') {\n      format = currentColor.a === 1 ? 'hex' : 'rgb';\n    } else if (format === 'auto') {\n      format = currentFormat;\n    }\n\n    switch (format) {\n      case 'hex':\n        colorValue.value = hex;\n        break;\n      case 'rgb':\n        colorValue.value = RGBAToStr(currentColor);\n        break;\n      case 'hsl':\n        colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n        break;\n    }\n\n    // Select the current format in the format switcher\n    document.querySelector(`.clr-format [value=\"${format}\"]`).checked = true;\n  }\n\n  /**\n   * Set the hue when its slider is moved.\n   */\n  function setHue() {\n    const hue = hueSlider.value * 1;\n    const x = colorMarker.style.left.replace('px', '') * 1;\n    const y =  colorMarker.style.top.replace('px', '') * 1;\n\n    picker.style.color = `hsl(${hue}, 100%, 50%)`;\n    hueMarker.style.left = `${hue / 360 * 100}%`;\n\n    setColorAtPosition(x, y);\n  }\n\n  /**\n   * Set the alpha when its slider is moved.\n   */\n  function setAlpha() {\n    const alpha = alphaSlider.value / 100;\n\n    alphaMarker.style.left = `${alpha * 100}%`;\n    updateColor({ a: alpha });\n    pickColor();\n  }\n\n  /**\n   * Convert HSVA to RGBA.\n   * @param {object} hsva Hue, saturation, value and alpha values.\n   * @return {object} Red, green, blue and alpha values.\n   */\n  function HSVAtoRGBA(hsva) {\n    const saturation = hsva.s / 100;\n    const value = hsva.v / 100;\n    let chroma = saturation * value;\n    let hueBy60 = hsva.h / 60;\n    let x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n    let m = value - chroma;\n\n    chroma = (chroma + m);\n    x = (x + m);\n\n    const index = Math.floor(hueBy60) % 6;\n    const red = [chroma, x, m, m, x, chroma][index];\n    const green = [x, chroma, chroma, x, m, m][index];\n    const blue = [m, m, x, chroma, chroma, x][index];\n\n    return {\n      r: Math.round(red * 255),\n      g: Math.round(green * 255),\n      b: Math.round(blue * 255),\n      a: hsva.a\n    };\n  }\n\n  /**\n   * Convert HSVA to HSLA.\n   * @param {object} hsva Hue, saturation, value and alpha values.\n   * @return {object} Hue, saturation, lightness and alpha values.\n   */\n  function HSVAtoHSLA(hsva) {\n    const value = hsva.v / 100;\n    const lightness = value * (1 - (hsva.s / 100) / 2);\n    let saturation;\n\n    if (lightness > 0 && lightness < 1) {\n      saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n    }\n\n    return {\n      h: hsva.h,\n      s: saturation || 0,\n      l: Math.round(lightness * 100),\n      a: hsva.a\n    };\n  }\n\n  /**\n   * Convert RGBA to HSVA.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {object} Hue, saturation, value and alpha values.\n   */\n  function RGBAtoHSVA(rgba) {\n    const red   = rgba.r / 255;\n    const green = rgba.g / 255;\n    const blue  = rgba.b / 255;\n    const xmax = Math.max(red, green, blue);\n    const xmin = Math.min(red, green, blue);\n    const chroma = xmax - xmin;\n    const value = xmax;\n    let hue = 0;\n    let saturation = 0;\n\n    if (chroma) {\n      if (xmax === red ) { hue = ((green - blue) / chroma); }\n      if (xmax === green ) { hue = 2 + (blue - red) / chroma; }\n      if (xmax === blue ) { hue = 4 + (red - green) / chroma; }\n      if (xmax) { saturation = chroma / xmax; }\n    }\n\n    hue = Math.floor(hue * 60);\n\n    return {\n      h: hue < 0 ? hue + 360 : hue,\n      s: Math.round(saturation * 100),\n      v: Math.round(value * 100),\n      a: rgba.a\n    };\n  }\n\n  /**\n   * Parse a string to RGBA.\n   * @param {string} str String representing a color.\n   * @return {object} Red, green, blue and alpha values.\n   */\n  function strToRGBA(str) {\n    const regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n    let match, rgba;\n\n    // Default to black for invalid color strings\n    ctx.fillStyle = '#000';\n\n    // Use canvas to convert the string to a valid color string\n    ctx.fillStyle = str;\n    match = regex.exec(ctx.fillStyle);\n\n    if (match) {\n      rgba = {\n        r: match[3] * 1,\n        g: match[4] * 1,\n        b: match[5] * 1,\n        a: match[6] * 1\n      };\n\n      // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n      rgba.a = +rgba.a.toFixed(2);\n\n    } else {\n      match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(h => parseInt(h, 16));\n      rgba = {\n        r: match[0],\n        g: match[1],\n        b: match[2],\n        a: 1\n      };\n    }\n\n    return rgba;\n  }\n\n  /**\n   * Convert RGBA to Hex.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {string} Hex color string.\n   */\n  function RGBAToHex(rgba) {\n    let R = rgba.r.toString(16);\n    let G = rgba.g.toString(16);\n    let B = rgba.b.toString(16);\n    let A = '';\n\n    if (rgba.r < 16) {\n      R = '0' + R;\n    }\n\n    if (rgba.g < 16) {\n      G = '0' + G;\n    }\n\n    if (rgba.b < 16) {\n      B = '0' + B;\n    }\n\n    if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n      const alpha = rgba.a * 255 | 0;\n      A = alpha.toString(16);\n\n      if (alpha < 16) {\n        A = '0' + A;\n      }\n    }\n\n    return '#' + R + G + B + A;\n  }\n\n  /**\n   * Convert RGBA values to a CSS rgb/rgba string.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {string} CSS color string.\n   */\n  function RGBAToStr(rgba) {\n    if (!settings.alpha || (rgba.a === 1 && !settings.forceAlpha)) {\n      return `rgb(${rgba.r}, ${rgba.g}, ${rgba.b})`;\n    } else {\n      return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n    }\n  }\n\n  /**\n   * Convert HSLA values to a CSS hsl/hsla string.\n   * @param {object} hsla Hue, saturation, lightness and alpha values.\n   * @return {string} CSS color string.\n   */\n  function HSLAToStr(hsla) {\n    if (!settings.alpha || (hsla.a === 1 && !settings.forceAlpha)) {\n      return `hsl(${hsla.h}, ${hsla.s}%, ${hsla.l}%)`;\n    } else {\n      return `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n    }\n  }\n\n  /**\n   * Init the color picker.\n   */\n  function init() {\n    // Render the UI\n    container = undefined;\n    picker = document.createElement('div');\n    picker.setAttribute('id', 'clr-picker');\n    picker.className = 'clr-picker';\n    picker.innerHTML =\n    `<input id=\"clr-color-value\" name=\"clr-color-value\" class=\"clr-color\" type=\"text\" value=\"\" spellcheck=\"false\" aria-label=\"${settings.a11y.input}\">`+\n    `<div id=\"clr-color-area\" class=\"clr-gradient\" role=\"application\" aria-label=\"${settings.a11y.instruction}\">`+\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>'+\n    '</div>'+\n    '<div class=\"clr-hue\">'+\n      `<input id=\"clr-hue-slider\" name=\"clr-hue-slider\" type=\"range\" min=\"0\" max=\"360\" step=\"1\" aria-label=\"${settings.a11y.hueSlider}\">`+\n      '<div id=\"clr-hue-marker\"></div>'+\n    '</div>'+\n    '<div class=\"clr-alpha\">'+\n      `<input id=\"clr-alpha-slider\" name=\"clr-alpha-slider\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" aria-label=\"${settings.a11y.alphaSlider}\">`+\n      '<div id=\"clr-alpha-marker\"></div>'+\n      '<span></span>'+\n    '</div>'+\n    '<div id=\"clr-format\" class=\"clr-format\">'+\n      '<fieldset class=\"clr-segmented\">'+\n        `<legend>${settings.a11y.format}</legend>`+\n        '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">'+\n        '<label for=\"clr-f1\">Hex</label>'+\n        '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">'+\n        '<label for=\"clr-f2\">RGB</label>'+\n        '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">'+\n        '<label for=\"clr-f3\">HSL</label>'+\n        '<span></span>'+\n      '</fieldset>'+\n    '</div>'+\n    '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>'+\n    `<button type=\"button\" id=\"clr-clear\" class=\"clr-clear\" aria-label=\"${settings.a11y.clear}\">${settings.clearLabel}</button>`+\n    '<div id=\"clr-color-preview\" class=\"clr-preview\">'+\n      `<button type=\"button\" id=\"clr-close\" class=\"clr-close\" aria-label=\"${settings.a11y.close}\">${settings.closeLabel}</button>`+\n    '</div>'+\n    `<span id=\"clr-open-label\" hidden>${settings.a11y.open}</span>`+\n    `<span id=\"clr-swatch-label\" hidden>${settings.a11y.swatch}</span>`;\n\n    // Append the color picker to the DOM\n    document.body.appendChild(picker);\n\n    // Reference the UI elements\n    colorArea = getEl('clr-color-area');\n    colorMarker = getEl('clr-color-marker');\n    clearButton = getEl('clr-clear');\n    closeButton = getEl('clr-close');\n    colorPreview = getEl('clr-color-preview');\n    colorValue = getEl('clr-color-value');\n    hueSlider = getEl('clr-hue-slider');\n    hueMarker = getEl('clr-hue-marker');\n    alphaSlider = getEl('clr-alpha-slider');\n    alphaMarker = getEl('clr-alpha-marker');\n\n    // Bind the picker to the default selector\n    bindFields(settings.el);\n    wrapFields(settings.el);\n\n    addListener(picker, 'mousedown', event => {\n      picker.classList.remove('clr-keyboard-nav');\n      event.stopPropagation();\n    });\n\n    addListener(colorArea, 'mousedown', event => {\n      addListener(document, 'mousemove', moveMarker);\n    });\n\n    addListener(colorArea, 'touchstart', event => {\n      document.addEventListener('touchmove', moveMarker, { passive: false });\n    });\n\n    addListener(colorMarker, 'mousedown', event => {\n      addListener(document, 'mousemove', moveMarker);\n    });\n\n    addListener(colorMarker, 'touchstart', event => {\n      document.addEventListener('touchmove', moveMarker, { passive: false });\n    });\n\n    addListener(colorValue, 'change', event => {\n      const value = colorValue.value;\n\n      if (currentEl || settings.inline) {\n        const color = value === '' ? value : setColorFromStr(value);\n        pickColor(color);\n      }\n    });\n\n    addListener(clearButton, 'click', event => {\n      pickColor('');\n      closePicker();\n    });\n\n    addListener(closeButton, 'click', event => {\n      pickColor();\n      closePicker();\n    });\n\n    addListener(getEl('clr-format'), 'click', '.clr-format input', event => {\n      currentFormat = event.target.value;\n      updateColor();\n      pickColor();\n    });\n\n    addListener(picker, 'click', '.clr-swatches button', event => {\n      setColorFromStr(event.target.textContent);\n      pickColor();\n\n      if (settings.swatchesOnly) {\n        closePicker();\n      }\n    });\n\n    addListener(document, 'mouseup', event => {\n      document.removeEventListener('mousemove', moveMarker);\n    });\n\n    addListener(document, 'touchend', event => {\n      document.removeEventListener('touchmove', moveMarker);\n    });\n\n    addListener(document, 'mousedown', event => {\n      keyboardNav = false;\n      picker.classList.remove('clr-keyboard-nav');\n      closePicker();\n    });\n\n    addListener(document, 'keydown', event => {\n      const key = event.key;\n      const target = event.target;\n      const shiftKey = event.shiftKey;\n      const navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n      if (key === 'Escape') {\n        closePicker(true);\n\n      // Display focus rings when using the keyboard\n      } else if (navKeys.includes(key)) {\n        keyboardNav = true;\n        picker.classList.add('clr-keyboard-nav');\n      }\n\n      // Trap the focus within the color picker while it's open\n      if (key === 'Tab' && target.matches('.clr-picker *')) {\n        const focusables = getFocusableElements();\n        const firstFocusable = focusables.shift();\n        const lastFocusable = focusables.pop();\n\n        if (shiftKey && target === firstFocusable) {\n          lastFocusable.focus();\n          event.preventDefault();\n        } else if (!shiftKey && target === lastFocusable) {\n          firstFocusable.focus();\n          event.preventDefault();\n        }\n      }\n    });\n\n    addListener(document, 'click', '.clr-field button', event => {\n      // Reset any previously set per-instance options\n      if (hasInstance) {\n        resetVirtualInstance();\n      }\n\n      // Open the color picker\n      event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n    });\n\n    addListener(colorMarker, 'keydown', event => {\n      const movements = {\n        ArrowUp: [0, -1],\n        ArrowDown: [0, 1],\n        ArrowLeft: [-1, 0],\n        ArrowRight: [1, 0]\n      };\n\n      if (Object.keys(movements).includes(event.key)) {\n        moveMarkerOnKeydown(...movements[event.key]);\n        event.preventDefault();\n      }\n    });\n\n    addListener(colorArea, 'click', moveMarker);\n    addListener(hueSlider, 'input', setHue);\n    addListener(alphaSlider, 'input', setAlpha);\n  }\n\n  /**\n   * Return a list of focusable elements within the color picker.\n   * @return {array} The list of focusable DOM elemnts.\n   */\n  function getFocusableElements() {\n    const controls = Array.from(picker.querySelectorAll('input, button'));\n    const focusables = controls.filter(node => !!node.offsetWidth);\n\n    return focusables;\n  }\n\n  /**\n   * Shortcut for getElementById to optimize the minified JS.\n   * @param {string} id The element id.\n   * @return {object} The DOM element with the provided id.\n   */\n  function getEl(id) {\n    return document.getElementById(id);\n  }\n\n  /**\n   * Shortcut for addEventListener to optimize the minified JS.\n   * @param {object} context The context to which the listener is attached.\n   * @param {string} type Event type.\n   * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n   * @param {function} [fn] Event handler if delegation is used.\n   */\n  function addListener(context, type, selector, fn) {\n    const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n    // Delegate event to the target of the selector\n    if (typeof selector === 'string') {\n      context.addEventListener(type, event => {\n        if (matches.call(event.target, selector)) {\n          fn.call(event.target, event);\n        }\n      });\n\n    // If the selector is not a string then it's a function\n    // in which case we need a regular event listener\n    } else {\n      fn = selector;\n      context.addEventListener(type, fn);\n    }\n  }\n\n  /**\n   * Call a function only when the DOM is ready.\n   * @param {function} fn The function to call.\n   * @param {array} [args] Arguments to pass to the function.\n   */\n  function DOMReady(fn, args) {\n    args = args !== undefined ? args : [];\n\n    if (document.readyState !== 'loading') {\n      fn(...args);\n    } else {\n      document.addEventListener('DOMContentLoaded', () => {\n        fn(...args);\n      });\n    }\n  }\n\n  // Polyfill for Nodelist.forEach\n  if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n\n  // Expose the color picker to the global scope\n  window.Coloris = (() => {\n    const methods = {\n      set: configure,\n      wrap: wrapFields,\n      close: closePicker,\n      setInstance: setVirtualInstance,\n      removeInstance: removeVirtualInstance,\n      updatePosition: updatePickerPosition\n    };\n\n    function Coloris(options) {\n      DOMReady(() => {\n        if (options) {\n          if (typeof options === 'string') {\n            bindFields(options);\n          } else {\n            configure(options);\n          }\n        }\n      });\n    }\n\n    for (const key in methods) {\n      Coloris[key] = (...args) => {\n        DOMReady(methods[key], args);\n      };\n    }\n\n    return Coloris;\n  })();\n\n  // Init the color picker when the DOM is ready\n  DOMReady(init);\n\n})(window, document, Math);\n","import { defineStore } from 'pinia';\nimport { ref, reactive, onMounted } from \"vue\";\nimport {useListViewStore} from \"@/stores/ListViewStore\";\nimport api from '@/api';\nexport const useBigMenuStore = defineStore('bigMenuStore', () => {\n    const user = reactive({\n        id: 0,\n        name: '',\n        surname: '',\n    });\n    const sortLists = reactive([\n        {\n            id: 1,\n            name: 'Сегодня',\n            count: '',\n            color: '#4ceba7',\n            url: '/workspace/sortList=today'\n        },\n        {\n            id: 2,\n            name: 'С флажком',\n            count: '',\n            color: '#e76262',\n            url: '/workspace/sortList=with_flag'\n        },\n        {\n            id: 3,\n            name: 'Завершено',\n            count: '',\n            color: '#daadad',\n            url: '/workspace/sortList=done'\n        },\n        {\n            id: 4,\n            name: 'Все',\n            count: '',\n            color: '#c4c4c4',\n            url: '/workspace/sortList=all'\n        },\n    ]);\n    const personalLists = reactive([]);\n    const personalTags = reactive([\n        {\n            id:0,\n            name:'Все теги'\n        }\n    ]);\n    const lv = useListViewStore();\n    const is_load_sortLists = ref(false);\n    const is_load_personalLists = ref(false);\n    const is_load_personalTags = ref(false);\n\n    onMounted(async () => {\n        await getUserInfo();\n        await firstRequest();\n        await startIntervalUpdate();\n    });\n\n    const getUserInfo = async () => {\n        const userInfo = await api.getInfo('user');\n        user.id = userInfo.id;\n        user.email = userInfo.email;\n        user.name = userInfo.name;\n        user.surname = userInfo.surname;\n    }\n\n    const firstRequest = async () => {\n        console.log('go')\n        await getSortListsCount();\n        await getPersonalLists();\n        await getPersonalTags();\n    }\n    const startIntervalUpdate =  async () => {\n        const startInterval = setInterval(() => {\n            console.log('request');\n            //lv.getTasksOrTags();\n            getSortListsCount();\n            getPersonalLists();\n            getPersonalTags();\n        },60000);\n        setTimeout(() => {\n            console.log('stop');\n            clearInterval(startInterval);\n        }, 60 * 60000);\n    }\n\n    const getSortListsCount = async () => {\n        is_load_sortLists.value = true;\n        const response = await api.getInfoWithArgs('sortLists', {\n            params: {\n                user_id: user.id\n            }\n        });\n        if ((typeof response) === \"object\") {\n            response.forEach(item => {\n                sortLists[item.id-1].count = item.count;\n            });\n            is_load_sortLists.value = false;\n        }\n    }\n\n    let r = [];\n    const getPersonalLists = async () => {\n        try {\n            is_load_personalLists.value = true;\n            const response = await api.getInfoWithArgs('lists', {\n                params: {\n                    user_id: user.id\n                }\n            });\n            if ((typeof response) === \"object\" && response.length > 0) {\n                personalLists.length = 0;\n                response.forEach(item => {\n                    personalLists.push(item);\n                });\n                is_load_personalLists.value = false;\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getPersonalTags = async () => {\n        try {\n            is_load_personalTags.value = true;\n            const response = await api.getInfo('tags');\n            if ((typeof response) === \"object\" && response.length > 0) {\n                personalTags.length = 0;\n                personalTags.push({ id:0, name:'Все теги' });\n                response.forEach(item => {\n                    personalTags.push(item);\n                });\n                is_load_personalTags.value = false;\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const addNewList = (list) => {\n        personalLists.push(list);\n    };\n\n    const saveList = async (list) => {\n        await api.saveList(list);\n        await firstRequest();\n    };\n\n    const deleteList = async (listId) => {\n        await api.deleteList(listId);\n        await firstRequest();\n    };\n\n    return {\n        sortLists, is_load_sortLists,\n        personalLists, is_load_personalLists,\n        personalTags, is_load_personalTags, user,\n        firstRequest, addNewList, saveList, deleteList\n    };\n});\n","import { defineStore } from 'pinia';\nimport {ref, reactive, onMounted, watchEffect} from \"vue\";\nimport {useRoute} from \"vue-router\";\nimport api from \"@/api\";\nimport {useBigMenuStore} from \"@/stores/BigMenuStore\";\n\nexport const useListViewStore = defineStore('listViewStore', () => {\n    const currentPersonalListTasks = reactive([]);\n    const currentSortListTasks = reactive([]);\n    const currentListInfo = reactive({\n        id: '',\n        name: '',\n        color: '',\n    });\n    const currentSortListInfo = reactive({\n        id: 0,\n        name: '',\n        color: '',\n    });\n    const searchResult = reactive([]);\n    const tags = reactive([]);\n    const tag_name = ref('');\n    const loading = ref(true);\n    const loadingSmall = ref(true);\n    const is_somethingWrong = ref(false);\n    const request = ref('');\n    const route = useRoute();\n    const currentPath = ref(route.path);\n    const bigMenu = useBigMenuStore();\n\n    onMounted(async () => {\n        setTimeout(() => {\n            getTasksOrTags();\n        },300)\n        const interval = setInterval(() => {\n            if(String(currentPath.value) !== String(route.path)) {\n                loading.value = true;\n                getTasksOrTags();\n            }\n        }, 0)\n    });\n\n    const getTasksOrTags = async () => {\n        loadingSmall.value = true;\n        currentPath.value = route.path;\n        try {\n            is_somethingWrong.value = false;\n            await fetchToServer();\n            loadingSmall.value = false;\n        } catch (e) {\n            console.log(e);\n            is_somethingWrong.value = true;\n            loading.value = false;\n            loadingSmall.value = false;\n        }\n    }\n\n    const  fetchToServer =  async () => {\n        if (route.params.id_list) {\n            request.value = `list?id=${route.params.id_list}`;\n        } else if (route.params.name) {\n            request.value = `list?name=${route.params.name}`;\n        } else if (route.params.id_tag) {\n            request.value = `tag?id=${route.params.id_tag}`;\n        } else { request.value = ''; }\n        if (request.value) {\n            const response = await api.getInfoWithArgs(request.value, {\n                params: {\n                    user_id: bigMenu.user.id\n                }\n            });\n            setTimeout(() => {\n                updateData(response);\n            }, 300);\n        }\n    }\n\n    const updateData = (arr) => {\n        if ((arr['sortList'] || arr['list'] || arr['tag']) && (arr['tasks'] || arr['tasksByList'])) {\n\n            if (route.params.id_list) {\n                currentPersonalListTasks.length = 0;\n            } else if (route.params.name) {\n                currentSortListTasks.length = 0;\n            } else if (route.params.id_tag) {\n                tags.length = 0;\n            }\n\n            if (route.params.id_list) {\n                arr['tasks'].forEach(item => {\n                    item.key = Math.random();\n                    currentPersonalListTasks.push(item);\n                });\n            } else if (route.params.name) {\n                arr['tasksByList'].forEach(item => {\n                    item.key = Math.random();\n                    item.tasks.forEach(task => {\n                        task.key = Math.random();\n                    });\n                    currentSortListTasks.push(item);\n                });\n            }\n            sortTasksByDone();\n            console.log(currentPersonalListTasks);\n            console.log(currentSortListTasks);\n\n            if (route.params.id_list) {\n                currentListInfo.id = arr['list'].id;\n                currentListInfo.name = arr['list'].name;\n                currentListInfo.color = arr['list'].color;\n            } else if (route.params.name) {\n                currentSortListInfo.id = arr['sortList'].id;\n                currentSortListInfo.name = arr['sortList'].name;\n                bigMenu.sortLists.forEach(sortList => {\n                    if (sortList.id === currentSortListInfo.id) { currentSortListInfo.color = sortList.color; }\n                });\n            } else if (route.params.id_tag) {\n                tag_name.value = arr['tag'];\n            }\n\n            loading.value = false;\n            loadingSmall.value = false;\n\n        } else {\n            is_somethingWrong.value = true;\n            loading.value = false;\n            loadingSmall.value = false;\n        }\n    }\n\n    const clearTasks = (id) => {\n        let i = 0;\n        currentSortListTasks.forEach((list) => {\n            list.tasks.forEach((task,idx) => {\n                if (+id === +task.id) {\n                    console.log(list.tasks[idx])\n                    list.tasks.splice(idx,1);\n                }\n            });\n            if (list.tasks.length > 0) {\n                i++;\n            }\n        });\n        if (!i) {\n            currentSortListTasks.length = 0;\n        }\n    }\n\n    const updateTask = async (task) => {\n        const response = await api.postInfo(`updateTask`, task);\n        await bigMenu.firstRequest();\n    }\n\n    const addNewTask = () => {\n        currentPersonalListTasks.push({\n            id: null,\n            id_list: currentListInfo.id,\n            name: null,\n            description: null,\n            deadline: null,\n            is_done: 0,\n            is_flagged: 0,\n            url: null,\n            priority: null,\n        });\n    };\n\n    const updateTaskDone = (id, is_done) => {\n        currentPersonalListTasks.find(el => el.id === id).is_done = +is_done;\n        sortTasksById();\n        sortTasksByDone();\n    };\n\n    const sortTasksById = () => {\n        currentPersonalListTasks.sort((a, b) => {\n            if (a.id > b.id) return 1;\n            if (a.id == b.id) return 0;\n            if (a.id < b.id) return -1;\n        });\n    };\n\n    const sortTasksByDone = () => {\n        currentPersonalListTasks.sort((a, b) => {\n            if (a.is_done > b.is_done) return 1;\n            if (a.is_done == b.is_done) return 0;\n            if (a.is_done < b.is_done) return -1;\n        });\n    };\n\n    const removeNewTask = () => {\n        currentPersonalListTasks.forEach((task, idx) => {\n            if (!task.id) {\n                currentPersonalListTasks.splice(idx,1);\n            }\n        });\n    };\n\n    const createTask = async (task) => {\n        task.id_list = currentListInfo.id;\n        const response = await api.postInfo(`createTask`, task);\n        currentPersonalListTasks.forEach((task, idx) => {\n            if (!task.id) {\n                task.id = response.id;\n            }\n        });\n        await bigMenu.firstRequest();\n        return response;\n    }\n\n    const deleteTask = async (obj) => {\n        currentPersonalListTasks.forEach((task, idx) => {\n            if (task.id === obj.id) {\n                currentPersonalListTasks.splice(idx,1);\n            }\n        });\n        await api.postInfo(`deleteTask`, obj);\n        await bigMenu.firstRequest();\n    }\n\n    const findTasks = async (searchString) => {\n        //currentSearchTasks\n        const response = await api.globalSearch(searchString);\n        console.log(response)\n        searchResult.length = 0;\n        response.forEach(item => {\n            searchResult.push(item);\n        });\n    }\n\n    return {\n        tasks: currentPersonalListTasks,\n        stasks: currentSortListTasks,\n        listInfo: currentListInfo,\n        sortListInfo: currentSortListInfo,\n        searchResult,\n        loading,\n        loadingSmall,\n        is_somethingWrong,\n        request,\n        tags,\n        tag_name,\n        currentPath,\n        getTasksOrTags,\n        updateTask,\n        addNewTask,\n        removeNewTask,\n        createTask,\n        deleteTask,\n        updateTaskDone,\n        clearTasks,\n        findTasks,\n    };\n});\n","import { defineStore } from 'pinia';\nimport {onMounted, reactive, ref} from \"vue\";\nimport {useBigMenuStore} from \"@/stores/BigMenuStore\";\nimport {useListViewStore} from \"@/stores/ListViewStore\";\nimport api from '@/api';\n\nexport const useImageDBStore = defineStore('ImageDBStore', () => {\n    const sortLists = reactive([\n        {\n            id: 1,\n            name: 'Сегодня',\n            count: '',\n            color: '#4ceba7',\n            url: '/workspace/sortList=today'\n        },\n        {\n\n            id: 2,\n            name: 'С флажком',\n            count: '',\n            color: '#e76262',\n            url: '/workspace/sortList=with_flag'\n        },\n        {\n\n            id: 3,\n            name: 'Завершено',\n            count: '',\n            color: '#daadad',\n            url: '/workspace/sortList=done'\n        },\n        {\n\n            id: 4,\n            name: 'Все',\n            count: '',\n            color: '#c4c4c4',\n            url: '/workspace/sortList=all'\n        },\n    ]);\n    const personalLists = reactive([]);\n    const personalTags = reactive([\n        {\n            id:0,\n            name:'Все теги'\n        }\n    ]);\n    const tasksByList = reactive([]);\n    const bm = useBigMenuStore();\n    const lv = useListViewStore();\n\n    onMounted(async () => {\n        await getPersonalLists();\n        getTasksForLists();\n    })\n\n    const getPersonalLists = async () => {\n        /*const response = await api.getInfo('lists');\n        if ((typeof response) === \"object\" && response.length > 0) {\n            personalLists.length = 0;\n            response.forEach(item => {\n                personalLists.push(item);\n            });\n        }*/\n    };\n\n    const getTasksForLists = () => {\n        tasksByList.length = 0;\n        personalLists.forEach(async list => {\n            const response = await api.getInfo(`list?id=${list.id}`);\n            if ((typeof response) === \"object\" && response.length > 0) {\n                tasksByList.push({\n                    list: response[0],\n                    tasks: response[1],\n                });\n            }\n        });\n    };\n\n    /*const addNewTask = () => {\n        tasksByList.forEach((tbl) => {\n            if (lv.listInfo.id  === tbl.list.id) {\n                tbl.tasks.push({\n                    id_list: tbl.list.id,\n                    name: null,\n                    description: null,\n                    deadline: null,\n                    is_done: 0,\n                    is_flagged: 0,\n                    url: null,\n                    priority: null,\n                });\n            }\n        });\n    };*/\n\n    return {\n        personalLists,\n        tasksByList,\n       // addNewTask\n    };\n});\n","<template>\n    <div class=\"application-name__container\">\n        <h1 class=\"application-name__label\">Tasker</h1>\n    </div>\n</template>\n\n<script>\n\n</script>\n\n<style lang=\"scss\">\n    .application-name__container {\n        width: 100%;\n        height: 40px;\n        position: sticky;\n        top: 0;\n        background-color: transparent;\n    }\n    .application-name__label {\n        width: auto;\n        line-height: 47px;\n        font-size: 25px;\n        font-weight: 600;\n        letter-spacing: 10px;\n        text-transform: uppercase;\n        text-align: center;\n        color: #5C5D5F;\n    }\n</style>\n","import { render } from \"./ApplicationName.vue?vue&type=template&id=d2506108\"\nconst script = {}\n\nimport \"./ApplicationName.vue?vue&type=style&index=0&id=d2506108&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"info-list\" ref=\"infoList\" @mouseup=\"openCloseDropDownList\" :class=\"{ active: +props.idList === +router.params.id_list }\">\n    <div class=\"drop-down-list\" ref=\"dropDownList\">\n      <button class=\"drop-down-list__btn\">Edit</button>\n      <button class=\"drop-down-list__btn\" @mouseup=\"emit('delete')\">Delete</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import {ref, onMounted, onBeforeUnmount} from \"vue\";\n  import {useListViewStore} from \"@/stores/ListViewStore\";\n  import {useRoute} from \"vue-router\";\n\n  const router = useRoute();\n  const ListView = useListViewStore();\n  const props = defineProps(['idList']);\n  const emit = defineEmits(['delete']);\n  const infoList = ref(null);\n  const dropDownList = ref(null);\n  const openCloseDropDownList = () => {\n    if (dropDownList.value.classList.contains('active')) {\n      dropDownList.value.classList.remove('active');\n    } else {\n      dropDownList.value.classList.add('active');\n    }\n  };\n\n  const closeDropDown = (e) => {\n    if (dropDownList.value.classList.contains('active') && !infoList.value.contains(e.target)) {\n      dropDownList.value.classList.remove('active');\n    }\n  }\n\n  onMounted(() => {\n    window.addEventListener('click', closeDropDown);\n  });\n  onBeforeUnmount(() => {\n    window.removeEventListener('click', closeDropDown);\n  });\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../assets/styles/global.scss\";\n  .info-list {\n    flex: 0 0 20px;\n    width: 20px;\n    height: 20px;\n    background-position: center;\n    background-size: 20px 20px;\n    background-repeat: no-repeat;\n    background-image: url(\"@/assets/svgs/info.svg\");\n    &.active { background-image: url(\"@/assets/svgs/info_invert.svg\"); }\n    cursor: pointer;\n    transition: 0.3s;\n    position: relative;\n  }\n  .drop-down-list {\n    position: absolute;\n    left: calc(50% - 145px);\n    bottom: calc(0px - 55px);\n    width: 150px;\n    padding: 5px;\n    background-color: #0a0a0a;\n    border: 1px solid #5F6164;\n    border-radius: 5px;\n    overflow: hidden;\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    z-index: 10;\n    &.active {\n      display: flex;\n    }\n    button {\n      width: 100%;\n      height: 20px;\n      color: #5F6164;\n      cursor: pointer;\n      transition: .3s;\n      &:hover {\n        color: $gold;\n      }\n    }\n  }\n</style>\n","import script from \"./InfoList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InfoList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./InfoList.vue?vue&type=style&index=0&id=f313ffa4&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f313ffa4\"]])\n\nexport default __exports__","<template>\n    <div class=\"lds-ripple\">\n        <div></div>\n        <div></div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    .lds-ripple {\n    display: inline-block;\n    position: relative;\n    width: 26px;\n    height: 26px;\n    }\n    .lds-ripple div {\n    position: absolute;\n    border: 1px solid #aaadae;\n    opacity: 1;\n    border-radius: 50%;\n    animation: lds-ripple 1s cubic-bezier(0, 0.5, 0.8, 1) infinite;\n    }\n    .lds-ripple div:nth-child(2) {\n    animation-delay: -0.5s;\n    }\n    @keyframes lds-ripple {\n        0% {\n            top: 13px;\n            left: 13px;\n            width: 0;\n            height: 0;\n            opacity: 0;\n        }\n        4.9% {\n            top: 13px;\n            left: 13px;\n            width: 0;\n            height: 0;\n            opacity: 0;\n        }\n        5% {\n            top: 13px;\n            left: 13px;\n            width: 0;\n            height: 0;\n            opacity: 1;\n        }\n        100% {\n            top: 0px;\n            left: 0px;\n            width: 26px;\n            height: 26px;\n            opacity: 0;\n        }\n    }\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=58bd569a&scoped=true\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=58bd569a&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-58bd569a\"]])\n\nexport default __exports__","import script from \"./SectionHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SectionHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SectionHeader.vue?vue&type=style&index=0&id=1e138800&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <router-link :to=\"props.url\">\n    <div class=\"sort-list\" :class=\"{ active: props.url === route.path }\">\n        <div class=\"sort-list__container\">\n            <div class=\"circle\" :style=\"{ backgroundColor: currentColor }\"></div>\n            <div class=\"sort-list__count\"><slot name=\"count\"></slot></div>\n        </div>\n        <div class=\"sort-list__label\"><slot name=\"name\"></slot></div>\n    </div>\n  </router-link>\n</template>\n\n<script setup>\nimport { useRoute } from 'vue-router'\n\nconst props = defineProps({\n    color: String,\n    url: String\n});\n\nconst route = useRoute();\n\nlet currentColor = props.color;\n\n</script>\n\n<style scoped lang=\"scss\">\n    @import \"../../assets/styles/global.scss\";\n    .sort-list {\n        width: 100%;\n        height: 70px;\n        background-color: $personal;\n        border-radius: 13px;\n        padding: 8px 9px 5px 9px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        cursor: pointer;\n        transition: .3s;\n        &:active {\n            background-color: $gold;\n            opacity: 0.8;\n            .sort-list__count, .sort-list__label {\n                color: $textColorActive;\n            }\n        }\n        &.active {\n          background-color: $gold;\n          .sort-list__count, .sort-list__label {\n            color: $textColorActive;\n          }\n          .circle {\n            box-shadow: 0 0 6px #26282B;\n          }\n        }\n    }\n    .sort-list__container {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    .circle {\n        background-color: grey;\n        border-radius: 90px;\n        width: 30px;\n        height: 30px;\n        transition: .3s;\n    }\n    .sort-list__count, .sort-list__label {\n        font-size: 18px;\n        color: $textColor;\n    }\n    .sort-list__count { font-weight: 600; }\n    .sort-list__label { font-weight: 400; font-size: 15px; }\n</style>","import script from \"./SortList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SortList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SortList.vue?vue&type=style&index=0&id=c2be3356&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2be3356\"]])\n\nexport default __exports__","<template>\n    <div class=\"sort-lists\">\n        <SectionHeader :is_load=\"bigMenuStore.is_load_sortLists\">Списки</SectionHeader>\n        <div class=\"sort-lists__container\">\n            <SortList \n                v-for=\"sortList in bigMenuStore.sortLists\"\n                :key=\"sortList.id\"\n                :color=\"sortList.color\"\n                :url=\"sortList.url\"\n            >\n                <template #name>{{ sortList.name }}</template>\n                <template #count>{{ sortList.count }}</template>\n            </SortList>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { onMounted } from 'vue';\nimport { useBigMenuStore } from \"@/stores/BigMenuStore\";\nimport SectionHeader from '../UI/SectionHeader.vue';\nimport SortList from '@/components/UI/SortList.vue';\n\nconst bigMenuStore = useBigMenuStore();\n\nonMounted( () => {\n  //defaultStore.getSortListsCount();\n});\n</script>\n\n<style lang=\"scss\">\n    .sort-lists__label {\n        font-size: 12px;\n        font-weight: 500;\n        color: #5F6164;\n        margin: 20px 0 3px 12px;\n    }\n    .sort-lists__container {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-column-gap: 11px;\n        grid-row-gap: 10px;\n    }\n</style>\n","import script from \"./TheSortLists.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TheSortLists.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TheSortLists.vue?vue&type=style&index=0&id=1ef4b000&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--  <router-link :to=\"`/workspace/list=${props.list.id}`\">-->\n    <div class=\"personal-list\" :class=\"{ active: props.list.id === +route.params.id_list }\" @mouseup=\"openList\">\n        <div class=\"personal-list__circle\" :style=\"{ backgroundColor: props.list.color }\"></div>\n        <div class=\"personal-list__label\"><slot name=\"name\"></slot></div>\n        <div class=\"info-list__wrapper\" ref=\"infoList\">\n          <InfoList\n              :idList=\"props.list.id\"\n              @delete=\"deleteList\"\n          />\n        </div>\n        <div class=\"personal-list__count\"><slot name=\"count\"></slot></div>\n    </div>\n<!--  </router-link>-->\n</template>\n\n<script setup>\nimport {useRoute, useRouter} from 'vue-router';\nimport InfoList from \"@/components/UI/InfoList.vue\";\nimport {useBigMenuStore} from \"@/stores/BigMenuStore\";\nimport {ref} from \"vue\";\n\nconst bigMenu = useBigMenuStore();\nconst props = defineProps({\n    list: Object,\n});\nconst route = useRoute();\nconst router = useRouter();\n\nconst infoList = ref(null);\n\nconst openList = (e) => {\n  if (!infoList.value.contains(e.target)) {\n    router.push({ name: 'list', params: { id_list: props.list.id } });\n  }\n};\n\nconst deleteList = () => {\n  bigMenu.deleteList(props.list.id);\n  if (+props.list.id === +route.params.id_list) {\n    router.push({ name: 'intro' });\n  }\n};\n</script>\n\n<style lang=\"scss\">\n    @import \"../../assets/styles/global.scss\";\n    .personal-list {\n        display: flex;\n        align-items: center;\n        //border: 1px solid white;\n        padding: 6px 15px 6px 6px;\n        border-radius: 5px;\n        cursor: pointer;\n        transition: .3s;\n        &.active {\n          background-color: $gold;\n          .personal-list__circle { box-shadow: 0 0 6px #26282B; }\n          .personal-list__count, .personal-list__label { color: $textColorActive; }\n        }\n    }\n    .personal-list__circle {\n        background-color: grey;\n        border-radius: 90px;\n        width: 28px;\n        height: 28px;\n        transition: .3s;\n    }\n    .personal-list__label {\n        margin-left: 8px;\n        font-size: 14px;\n        color: $textColor;\n        flex-grow: 1;\n    }\n    .personal-list__count {\n        font-size: 14px;\n        font-weight: 600;\n        color: $textColor;\n        transition: .3s;\n    }\n    .info-list__wrapper {\n      margin: 0 10px;\n    }\n</style>\n","import script from \"./PersonalList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonalList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonalList.vue?vue&type=style&index=0&id=84b27ac8&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"personal-lists\" v-if=\"bigMenuStore.personalLists.length\">\n        <SectionHeader :is_load=\"bigMenuStore.is_load_personalLists\">Мои списки</SectionHeader>\n        <div class=\"personal-lists__container\">\n            <PersonalList \n                v-for=\"list in bigMenuStore.personalLists\"\n                :key=\"list.id\"\n                :list=\"list\">\n                <template #name>{{ list.name }}</template>\n                <template #count>{{ list.count_of_active_tasks }}</template>\n            </PersonalList>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { useBigMenuStore } from \"@/stores/BigMenuStore\";\nimport SectionHeader from '../UI/SectionHeader.vue';\nimport PersonalList from '@/components/UI/PersonalList.vue';\n\nconst bigMenuStore = useBigMenuStore();\n\n</script>\n\n<style lang=\"scss\">\n    .personal-lists__label {\n        font-size: 12px;\n        font-weight: 500;\n        color: #5F6164;\n        margin: 20px 0 3px 12px;\n    }\n    .personal-lists__container {\n        display: grid;\n        max-height: 200px;\n        padding-right: 5px;\n    }\n</style>\n","import script from \"./ThePersonalLists.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ThePersonalLists.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ThePersonalLists.vue?vue&type=style&index=0&id=9a5d8a62&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <router-link :to=\"`/workspace/tag=${props.tag.id}`\">\n    <div class=\"personal-tag\" :class=\"{ active: +props.tag.id === +route.params.id_tag }\">{{ name }}</div>\n  </router-link>\n</template>\n\n<script setup>\nimport {onMounted, ref} from 'vue';\nimport { useRoute } from 'vue-router';\n\nconst props = defineProps({\n    tag: Object,\n});\nconst route = useRoute();\nconst id = ref(0);\nconst name = ref(props.tag.name);\nconst isTag = () => {\n  if(props.tag.id !== 0) {\n    name.value = `#${props.tag.name}`;\n  }\n};\nonMounted(() => {\n  isTag();\n});\n</script>\n\n<style lang=\"scss\">\n  @import \"../../assets/styles/global.scss\";\n    .personal-tag {\n        background-color: $personal;\n        color: $textColor;\n        font-size: 13px;\n        padding: 5px 8px;\n        border-radius: 5px;\n        margin-right: 5px;\n        margin-bottom: 5px;\n        cursor: pointer;\n        transition: .3s;\n        &:active { opacity: 0.8; }\n        &.active {\n          background-color: $gold;\n          color: $textColorActive;\n        }\n    }\n</style>","import script from \"./PersonalTag.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonalTag.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonalTag.vue?vue&type=style&index=0&id=61d187ac&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"personal-tags\" v-if=\"bigMenuStore.personalTags.length > 1\">\n        <SectionHeader :is_load=\"bigMenuStore.is_load_personalTags\">Теги</SectionHeader>\n        <div class=\"personal-tags__container scroll\">\n            <PersonalTag \n                v-for=\"(tag,key) in bigMenuStore.personalTags\"\n                :key=\"tag.id\"\n                :tag=\"tag\"\n            />\n        </div>\n    </div>\n</template>\n\n<script setup>\n/*import { ref,reactive,onMounted } from 'vue';*/\nimport { useBigMenuStore } from \"@/stores/BigMenuStore\";\nimport SectionHeader from '../UI/SectionHeader.vue';\nimport PersonalTag from '@/components/UI/PersonalTag.vue';\n\nconst bigMenuStore = useBigMenuStore();\n\n</script>\n\n<style lang=\"scss\">\n    .personal-tags__container {\n        display: flex;\n        flex-wrap: wrap;\n        padding: 6px 15px 6px 6px;\n        max-height: 105px;\n    }\n</style>\n","import script from \"./ThePersonalTags.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ThePersonalTags.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ThePersonalTags.vue?vue&type=style&index=0&id=50f2cf64&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <button class=\"top-btn\" :class=\"cl\"></button>\n</template>\n\n<script>\nexport default {\n    props: ['cl']\n}\n</script>\n\n<style lang=\"scss\">\n    .top-btn {\n        width: 35px;\n        height: 35px;\n        cursor: pointer;\n        background-position: center;\n        background-size: 30px 30px;\n        background-repeat: no-repeat;\n        &:active { opacity: 0.8; }\n    }\n    .person { background-image: url('../../assets/svgs/person.svg'); }\n    .plus { background-image: url('../../assets/svgs/plus.svg'); }\n    .loup { background-image: url('../../assets/svgs/magnifying-glass.svg'); }\n    .close { background-image: url('../../assets/svgs/close.svg'); }\n</style>\n","import { render } from \"./TopButton.vue?vue&type=template&id=e49c760c\"\nimport script from \"./TopButton.vue?vue&type=script&lang=js\"\nexport * from \"./TopButton.vue?vue&type=script&lang=js\"\n\nimport \"./TopButton.vue?vue&type=style&index=0&id=e49c760c&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <input type=\"text\"\n           class=\"searcher\"\n           v-model=\"name\"\n           :placeholder=\"placeholder\"\n           :style=\"{width: width, borderBottom: border}\"\n           @change=\"emit('underDeroch', name)\"\n           ref=\"inputFocus\"\n    />\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nconst props = defineProps({\n    name: String,\n    placeholder: String,\n    width: String,\n    border: String,\n});\nconst emit = defineEmits(['underDeroch']);\nconst name = ref(props.name);\nconst inputFocus = ref(null);\nonMounted(() => {\n    inputFocus.value.focus()\n});\n</script>\n\n<style lang=\"scss\">\n    @import \"../../assets/styles/global.scss\";\n    .searcher {\n        width: 100%;\n        color: #aaadae !important;\n      &::placeholder {\n        color: $placeholder;\n      }\n    }\n</style>\n","import script from \"./InputText.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InputText.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./InputText.vue?vue&type=style&index=0&id=6f79c356&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <input type=\"text\"\n         class=\"coloris inp\"\n         v-model=\"value\"\n         :style=\"{backgroundColor: value, color: value}\"\n         @change=\"emit('onDroch', value)\"\n  />\n</template>\n\n<script setup>\nimport {ref} from \"vue\";\nimport coloris from '@/coloris';\nconst props = defineProps({\n  color: String,\n});\nconst emit = defineEmits(['onDroch']);\nconst value = ref(props.color);\nColoris({\n  el: '.coloris',\n\n  themeMode: 'auto',\n  format: 'hex',\n  swatches: [\n    '#264653',\n    '#2a9d8f',\n    '#e9c46a',\n    '#f4a261',\n    '#e76f51',\n    '#d62828',\n    '#023e8a',\n    '#0077b6',\n    '#0096c7',\n    '#00b4d8',\n    '#48cae4',\n  ]\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/styles/coloris.css\";\n.inp {\n  width: 30px;\n  color: #c4c4c4;\n  border: 2px solid #706767;\n  border-radius: 5px;\n}\n</style>\n","import script from \"./Coloris.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Coloris.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Coloris.vue?vue&type=style&index=0&id=249477fc&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-249477fc\"]])\n\nexport default __exports__","<template>\n  <Transition mode=\"out-in\" name=\"fade\">\n    <div v-if=\"props.is_popup\">\n      <div class=\"blur\" @click=\"emits('close')\"></div>\n      <div class=\"popup\">\n        <div class=\"popup__header\">\n          <h4 class=\"popup__label\">Создать новый список</h4>\n          <TopButton :cl=\"'close'\" @click.prevent=\"emits('close')\"/>\n        </div>\n        <div class=\"popup__body\">\n          <div class=\"body__wrapper\">\n            <InputText\n                :name=\"name\"\n                @underDeroch=\"saveName\"\n                :width=\"width\"\n                :border=\"border\"\n                :placeholder=\"'Имя списка'\"\n            />\n            <div class=\"line\">\n              Цвет:\n              <Coloris\n                  :color=\"color\"\n                  @onDroch=\"saveColor\"\n              />\n            </div>\n            <p class=\"tip\">Совет: выбирайте цвета которые будут заметны на светлом/темном фоне</p>\n          </div>\n          <p class=\"big-a\" :style=\"{color: color}\">A</p>\n        </div>\n        <div class=\"popup__btns\">\n          <button class=\"popup__btn cancel\" @click=\"emits('close')\">Отмена</button>\n          <button class=\"popup__btn add\" @click=\"saveList\">Создать</button>\n        </div>\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<script setup>\nimport {ref} from 'vue';\nimport TopButton from \"@/components/UI/TopButton.vue\";\nimport InputText from \"@/components/UI/InputText.vue\";\nimport Coloris from \"@/components/UI/Coloris.vue\";\nimport api from \"@/api\";\nimport {useBigMenuStore} from \"@/stores/BigMenuStore\";\n\nconst props = defineProps({is_popup: Boolean});\nconst emits = defineEmits(['close'])\nconst border = '2px solid #706767';\nconst width = 'auto';\nconst name = ref('');\nconst color = ref('#e0e0e0');\nconst bigMenu = useBigMenuStore();\n\nconst saveName = (val) => {\n  name.value = val;\n}\nconst saveColor = (val) => {\n  color.value = val;\n}\nconst saveList = async () => {\n  emits('close');\n  bigMenu.addNewList({\n    id: null,\n    name: name.value.trim(),\n    color: color.value,\n    count_of_active_tasks: 0\n  });\n  await bigMenu.saveList({\n    name: name.value.trim(),\n    color: color.value,\n    user_id: bigMenu.user.id\n  });\n  name.value = '';\n  color.value = '#e0e0e0';\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../assets/styles/global.scss\";\n  .blur {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(29, 31, 34, 0.7);\n    z-index: 100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .popup {\n    width: 500px;\n    height: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    top: calc(50vh - 200px);\n    left: calc(50vw - 250px);\n    border-radius: 10px;\n    border: 2px solid grey;\n    background-color: $bigMenu;\n    padding: 10px 20px;\n    z-index: 100;\n  }\n  .popup__header {\n    height: 40px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .popup__label {\n    width: auto;\n    font-size: 30px;\n    color: $textColor;\n  }\n  .popup__body {\n    height: 130px;\n    display: flex;\n    justify-content: space-between;\n    color:$textColorActive;\n    font-size: 20px;\n  }\n  .big-a {\n    flex: 1 0 100px;\n    text-align: center;\n    font-size: 100px;\n    font-weight: 600;\n    text-shadow: 0 0 6px #26282B;\n  }\n  .tip {\n    width: 250px;\n    font-size: 12px;\n    text-align: justify;\n    color: $textColor;\n  }\n  .body__wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n  }\n  .line {\n    display: flex;\n    grid-gap: 5px;\n    align-items: center;\n    color: $textColor;\n  }\n  .popup__btns {\n    height: 30px;\n    width: 210px;\n    margin-left: auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .popup__btn {\n    width: 100px;\n    border-radius: 5px;\n    color: $textColorActive;\n    background-color: $personal;\n    &:active { opacity: 0.8 }\n  }\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: all 0.25s ease-out;\n  }\n\n  .fade-enter-from {\n    opacity: 0;\n  }\n\n  .fade-leave-to {\n    opacity: 0;\n  }\n</style>\n","import script from \"./CreateNewListPopup.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateNewListPopup.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CreateNewListPopup.vue?vue&type=style&index=0&id=3da30920&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3da30920\"]])\n\nexport default __exports__","<template>\n    <div class=\"big-menu\">\n        <div class=\"big-menu__wrapper\">\n            <ApplicationName/>\n            <TheSortLists/>\n            <ThePersonalLists/>\n            <ThePersonalTags/>\n        </div>\n        <button class=\"new-personal-list-btn\" @click=\"is_popup=true\">Новый список</button>\n      <Teleport to=\"body\">\n        <CreateNewListPopup :is_popup=\"is_popup\" @close=\"is_popup=false\"/>\n      </Teleport>\n    </div>\n</template>\n\n<script setup>\nimport ApplicationName from '@/components/UI/ApplicationName.vue';\nimport TheSortLists from '@/components/groups/TheSortLists.vue';\nimport ThePersonalLists from '@/components/groups/ThePersonalLists.vue';\nimport ThePersonalTags from '@/components/groups/ThePersonalTags.vue';\nimport CreateNewListPopup from \"@/components/groups/CreateNewListPopup.vue\";\nimport {ref} from \"vue\";\nconst is_popup = ref(false);\n</script>\n\n<style scoped lang=\"scss\">\n    @import \"../../assets/styles/global.scss\";\n    .big-menu {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding-bottom: 10px;\n        background-color: $bigMenu;\n        user-select: none;\n        overflow-y: auto;\n      &::-webkit-scrollbar {\n        width: 5px;\n        background-color: #0a0a0a;\n      }\n\n      &::-webkit-scrollbar-thumb {\n        border-radius: 10px;\n        background-color: #c4c4c4;\n      }\n\n      &::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.2);\n        background-color: #26282B;\n      }\n    }\n    .big-menu__wrapper {\n      flex: 1 0 100px;\n      display: flex;\n      flex-direction: column;\n        > div {\n            padding: 0 11px;\n        }\n    }\n    .new-personal-list-btn {\n        width: 155px;\n        color: $textColor;\n        cursor: pointer;\n        position: relative;\n        &:active { opacity: 0.8; }\n        &::before {\n            content: '';\n            display: block;\n            width: 15px;\n            height: 15px;\n            position: absolute;\n            top: 2px;\n            left: 12px;\n            //background-image: url('../../assets/svgs/plus-circle.svg');\n            background-image: url('../../assets/svgs/plus-circle_invert.svg');\n            background-position: center;\n            background-size: 15px 15px;\n            background-repeat: no-repeat;\n        }\n    }\n</style>\n","import script from \"./TheBigMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TheBigMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TheBigMenu.vue?vue&type=style&index=0&id=5b567e38&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5b567e38\"]])\n\nexport default __exports__","<template>\n  <input type=\"text\"\n         class=\"searcher\"\n         v-model=\"search\"\n         :placeholder=\"placeholder\"\n         :style=\"{width: width, borderBottom: border}\"\n         @keyup=\"setChanges\"\n         ref=\"searchInput\"\n  />\n</template>\n\n<script setup>\n  import { ref } from 'vue';\n  import {useListViewStore} from \"@/stores/ListViewStore\";\n\n  const listView = useListViewStore();\n  const props = defineProps({\n    placeholder: String,\n    width: String,\n    border: String,\n  });\n  const search = ref('');\n\n  const setChanges = () => {\n    listView.findTasks(search.value);\n  };\n</script>\n\n<style scoped lang=\"scss\">\n  @import \"../../assets/styles/global.scss\";\n  .searcher {\n    width: 100%;\n    color: #aaadae !important;\n    &::placeholder {\n      color: $placeholder;\n    }\n  }\n</style>\n","import script from \"./SearchInputText.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SearchInputText.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SearchInputText.vue?vue&type=style&index=0&id=100ccbfe&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-100ccbfe\"]])\n\nexport default __exports__","<template>\n    <div class=\"top-bar\">\n\n      <Transition mode=\"out-in\" name=\"fade\">\n\n        <div class=\"top-bar__container\" v-if=\"!isSearchMode\">\n            <router-link :to=\"'/workspace/user'\"><TopButton :cl=\"cl[0]\"/></router-link>\n            <TopButton :cl=\"cl[1]\" @mouseup=\"listInfo.addNewTask\" v-if=\"route.params.id_list\"/>\n        </div>\n        <div class=\"top-bar__container vide\" v-else>\n            <SearchInputText\n                :placeholder=\"'Поиск по задачам'\"\n                :isSearchMode=\"isSearchMode\"\n            />\n        </div>\n\n      </Transition>\n\n      <Transition mode=\"out-in\" name=\"fade\">\n\n        <TopButton v-if=\"!isSearchMode\"\n            :cl=\"cl[2]\"\n            @click=\"showSearch\"\n        />\n        <TopButton v-else\n            :cl=\"cl[3]\"\n            @click=\"hideSearch\"\n        />\n\n      </Transition>\n\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport TopButton from '@/components/UI/TopButton.vue';\nimport SearchInputText from '@/components/UI/SearchInputText.vue'\nimport {useImageDBStore} from \"@/stores/imageDBStore\";\nimport {useListViewStore} from \"@/stores/ListViewStore\";\nimport {useRoute, useRouter} from \"vue-router\";\n\nconst route = useRoute();\nconst router = useRouter();\nconst emit = defineEmits(['newTask']);\nconst cl = ref(['person','plus','loup','close']);\nconst isSearchMode = ref(false);\nconst listInfo = useListViewStore();\nconst imageDB = useImageDBStore();\n\nconst showSearch = () => {\n  isSearchMode.value = true;\n  router.push({ name: 'search' });\n};\nconst hideSearch = () => {\n  isSearchMode.value = false;\n  router.push({ name: 'intro' });\n};\n</script>\n\n<style lang=\"scss\">\n    .top-bar {\n        width: 100%;\n        height: 40px;\n        display: flex;\n        align-items: center;\n        padding: 11px 17.5px;\n        background-color: transparent;\n    }\n    .top-bar__container {\n        &.vide { height: 100%; }\n        flex-grow: 1;\n        display: flex;\n        justify-content: space-between;\n        padding-right: 11px;\n    }\n    .fade-enter-active,\n    .fade-leave-active {\n      transition: all 0.25s ease-out;\n    }\n\n    .fade-enter-from {\n      opacity: 0;\n    }\n\n    .fade-leave-to {\n      opacity: 0;\n    }\n</style>\n","import script from \"./TheTopBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TheTopBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TheTopBar.vue?vue&type=style&index=0&id=87be2fe0&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"tasker\">\n      <TheTopBar/>\n      <router-view\n          v-if=\"route.params.name\"\n          :key=\"route.params.name\"\n      />\n      <router-view\n          v-else-if=\"route.params.id_list\"\n          :key=\"route.params.id_list\"\n      />\n      <router-view\n          v-else-if=\"route.params.id_tag\"\n          :key=\"route.params.id_tag\"\n      />\n      <router-view\n          v-else\n          :key=\"route.path\"\n      />\n  </div>\n</template>\n\n<script setup>\nimport { useRoute } from \"vue-router\";\nimport TheTopBar from '@/components/groups/TheTopBar.vue';\nimport {ref} from \"vue\";\nconst route = useRoute();\n</script>\n\n<style lang=\"scss\">\n    @import \"../../assets/styles/global.scss\";\n    .tasker {\n        background-color: $tasker;\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 40px 1fr;\n        align-items: center;\n    }\n</style>\n","import script from \"./TheTasker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TheTasker.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TheTasker.vue?vue&type=style&index=0&id=17df1e7e&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"workspace\">\n    <TheBigMenu/>\n    <TheTasker/>\n  </div>\n</template>\n\n<script setup>\nimport TheBigMenu from '@/components/groups/TheBigMenu.vue';\nimport TheTasker from '@/components/groups/TheTasker.vue';\nimport {useImageDBStore} from \"@/stores/imageDBStore\";\nconst imageDB = useImageDBStore();\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../assets/styles/global.scss\";\n  .workspace {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    grid-template-columns: 300px 2fr;\n    grid-template-rows: 100vh;\n    grid-column-gap: 2px;\n    background-color: $workspace;\n  }\n</style>\n","import script from \"./WorkspaceView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WorkspaceView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WorkspaceView.vue?vue&type=style&index=0&id=5e53fd2b&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e53fd2b\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","window","document","Math","undefined","ctx","createElement","getContext","currentColor","r","g","b","h","s","v","a","container","picker","colorArea","colorAreaDims","colorMarker","colorPreview","colorValue","clearButton","closeButton","hueSlider","hueMarker","alphaSlider","alphaMarker","currentEl","currentFormat","oldColor","keyboardNav","settings","el","parent","theme","themeMode","rtl","wrap","margin","format","formatToggle","swatches","swatchesOnly","alpha","forceAlpha","focusInput","selectInput","inline","defaultColor","clearLabel","closeLabel","onChange","a11y","open","close","clear","marker","input","swatch","instruction","instances","currentInstanceId","defaultInstance","hasInstance","configure","options","bindFields","wrapFields","querySelector","appendChild","body","matchMedia","matches","className","updatePickerPosition","querySelectorAll","forEach","field","classList","toggle","isNaN","getEl","style","display","Array","isArray","i","push","innerHTML","length","join","slice","setAttribute","getColorFormatFromStr","setColorFromStr","label","show","insertBefore","labels","update","openLabel","swatchLabel","setVirtualInstance","selector","removeVirtualInstance","Object","keys","resetVirtualInstance","attachVirtualInstance","element","unsupportedOptions","option","addListener","event","value","add","focus","preventScroll","setSelectionRange","selectionStart","selectionEnd","select","getFocusableElements","shift","dispatchEvent","Event","bubbles","parentNode","contains","color","scrollY","pickerWidth","offsetWidth","pickerHeight","offsetHeight","reposition","left","top","parentStyle","parentMarginTop","parentBorderTop","offset","x","y","getComputedStyle","parseFloat","marginTop","borderTopWidth","getBoundingClientRect","coords","height","clientWidth","width","clientHeight","scrollTop","documentElement","offsetLeft","offsetTop","wrapper","classes","closePicker","revert","prevEl","setTimeout","remove","str","rgba","strToRGBA","hsva","RGBAtoHSVA","updateMarkerA11yLabel","updateColor","substring","toLowerCase","pickColor","call","CustomEvent","detail","setColorAtPosition","HSVAtoRGBA","saturation","toFixed","replace","getPointerPosition","pageX","changedTouches","pageY","moveMarker","pointer","setMarkerPosition","preventDefault","stopPropagation","moveMarkerOnKeydown","offsetX","offsetY","hex","RGBAToHex","opaqueHex","nextElementSibling","RGBAToStr","HSLAToStr","HSVAtoHSLA","checked","setHue","hue","setAlpha","chroma","hueBy60","abs","m","index","floor","red","green","blue","round","lightness","min","l","xmax","max","xmin","regex","match","fillStyle","exec","map","parseInt","R","toString","G","B","A","hsla","init","addEventListener","passive","textContent","removeEventListener","shiftKey","navKeys","includes","focusables","firstFocusable","lastFocusable","pop","movements","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","controls","from","filter","node","id","getElementById","context","type","fn","Element","prototype","msMatchesSelector","DOMReady","args","readyState","NodeList","Coloris","methods","set","setInstance","removeInstance","updatePosition","useBigMenuStore","defineStore","user","reactive","name","surname","sortLists","count","url","personalLists","personalTags","is_load_sortLists","useListViewStore","ref","is_load_personalLists","is_load_personalTags","onMounted","async","getUserInfo","firstRequest","startIntervalUpdate","userInfo","api","getInfo","email","console","log","getSortListsCount","getPersonalLists","getPersonalTags","startInterval","setInterval","clearInterval","response","getInfoWithArgs","params","user_id","item","e","addNewList","list","saveList","deleteList","listId","currentPersonalListTasks","currentSortListTasks","currentListInfo","currentSortListInfo","searchResult","tags","tag_name","loading","loadingSmall","is_somethingWrong","request","route","useRoute","currentPath","path","bigMenu","getTasksOrTags","String","fetchToServer","id_list","id_tag","updateData","arr","random","tasks","task","sortTasksByDone","sortList","clearTasks","idx","splice","updateTask","postInfo","addNewTask","description","deadline","is_done","is_flagged","priority","updateTaskDone","find","sortTasksById","sort","removeNewTask","createTask","deleteTask","obj","findTasks","globalSearch","searchString","stasks","listInfo","sortListInfo","useImageDBStore","tasksByList","getTasksForLists","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","router","infoList","dropDownList","openCloseDropDownList","closeDropDown","onBeforeUnmount","_hoisted_4","bigMenuStore","useRouter","openList","tag","isTag","_normalizeClass","$props","cl","inputFocus","border","saveName","saveColor","emits","trim","count_of_active_tasks","is_popup","listView","search","setChanges","isSearchMode","showSearch","hideSearch"],"sourceRoot":""}